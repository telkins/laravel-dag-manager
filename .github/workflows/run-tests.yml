name: run tests

on: [push, pull_request]

jobs:
  test:
    name: L${{ matrix.laravel }} - PHP${{ matrix.php }} - ${{ matrix.dependency-version }} - ${{ matrix.os }}
    # runs-on: ${{ matrix.os }}
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0
        env:
            MYSQL_ALLOW_EMPTY_PASSWORD: yes
            MYSQL_DATABASE: laravel-dag-manager-db
        ports:
            - 3306/tcp
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        php: [8.2]
        laravel: [11.*]
        dependency-version: [prefer-lowest, prefer-stable]
        include:
          - laravel: 11.*
            testbench: 9.*
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache/files
          key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick
          coverage: none

      # - name: Create database
      #   run: |
      #     sudo /etc/init.d/mysql start
      #     mysql  -u root -proot -e 'CREATE DATABASE IF NOT EXISTS laravel_mt_landlord;'
      #     mysql  -u root -proot -e 'CREATE DATABASE IF NOT EXISTS laravel_mt_tenant_1;'
      #     mysql  -u root -proot -e 'CREATE DATABASE IF NOT EXISTS laravel_mt_tenant_2;'

      # - name: Start Redis
      #   uses: supercharge/redis-github-action@1.1.0
      #   with:
      #     redis-version: 5

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

      - name: Execute tests
        run: vendor/bin/phpunit
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_NAME: laravel-dag-manager-db
          DB_PASSWORD:
          DB_USER: root
